services:
  gaganyatri_db:
    image: postgres:14-alpine
    container_name: gaganyatri_db
    restart: always
    env_file:
      - ./.env.prod.db
    volumes:
      - gaganyatri_db:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - pathfinder_net
  gaganyatri_backend:
    container_name: gaganyatri_backend 
    hostname: gaganyatri_backend
    build:
      context: ./backend
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:10000"
    privileged: true
    tty: true
    env_file:
      - ./.env.dev
    volumes:
      - static:/static
      - ./backend/:/app
      - /dev:/dev
    ports: 
      - '10000:10000'
    depends_on:
      gaganyatri_db:
        condition: service_healthy
    networks:
      - pathfinder_net
    extra_hosts:
      host.docker.internal: host-gateway
  gaganyatri_frontend:
    container_name: gaganyatri_frontend 
    hostname: gaganyatri_frontend
    build:
      context: frontend 
      dockerfile: Dockerfile.dev
    ports: 
      - '1337:11080'  
    depends_on:
      - gaganyatri_backend
    networks:
      - gaganyatri_net
    env_file:
      - ./.env.dev
    extra_hosts:
      host.docker.internal: host-gateway
networks:
  gagnyatri_net:
    driver: bridge
    #external: true

volumes:
#  prometheus_data: {}
#  grafana_data: {}
  gaganyatri_db:
    driver: local
  static:
  frontend:
